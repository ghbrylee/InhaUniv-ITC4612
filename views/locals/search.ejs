<div class="row my-5">
  <div class="col">
    <h1 class="text-center mb-5">지역검색</h1>
    <div class="row justify-content-end">
      <form class="col-6 col-lg-3 col-md-4" name="frm">
        <div class="input-group">
          <input
            class="form-control"
            placeholder="검색어"
            name="query"
            value="인천 맛집"
          />
          <button class="btn btn-primary">검색</button>
        </div>
      </form>
    </div>
    <hr />
    <div id="div_locals"></div>
    <div class="text-center" id="div_page">
      <button class="btn btn-primary" id="prev">이전</button>
      <span class="mx-3" id="span_page">1/10</span>
      <button class="btn btn-primary" id="next">다음</button>
    </div>
  </div>
</div>
<script type="x-handlebars-template" id="temp_locals">
  <table class="table">
  {{#each documents}}
      <tr>
          <td class="place">{{place_name}}</td>
          <td>{{address_name}}</td>
          <td class="phone">{{phone}}</td>
          <td><button class= "btn btn-primary btn-sm" local="{{toString @this}}">즐겨찾기</button></td>
      </tr>
  {{/each}}
  </tr>
</script>

<script>
  Handlebars.registerHelper("toString", function (local) {
    return JSON.stringify(local);
  });
</script>

<script type="module">
  import { app } from "/javascripts/firebaseInit.js";
  import {
    getDatabase,
    set,
    ref,
    onValue,
    get,
    child,
  } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
  const db = getDatabase(app);

  let page = 1;
  let query = $(frm.query).val();

  // 즐겨찾기 버튼을 클릭시

  $("#div_locals").on("click", ".btn-sm", async function () {
    if (!sessionStorage.getItem("email")) {
      sessionStorage.setItem("target", "/locals");
      location.href = "/users/login";
    } else {
      const local = JSON.parse($(this).attr("local"));
      console.log(local);

      const ref_local = ref(
        db,
        `favorite/${sessionStorage.getItem("uid")}/${local.id}`
      );
      const snapshot = await get(ref_local);
      if (snapshot.val()) {
        alert("이미 추가된 지역입니다.");
      } else {
        if (!confirm("즐겨찾기 추가하실래여?")) return;
        await set(ref_local, local);
        alert("해당지역이 즐겨찾기에 추가되었습니다.");
      }
    }
  });

  $("#next").on("click", function () {
    page++;
    getLocals();
  });

  $("#prev").on("click", function () {
    page--;
    getLocals();
  });

  $(frm).on("submit", function (e) {
    e.preventDefault();
    query = $(frm.query).val();
    if (query == "") {
      alert("검색 내용을 입력하세요!");
      $(frm.query).focus();
    } else {
      page = 1;
      getLocals();
    }
  });
  getLocals();

  function getLocals() {
    $.ajax({
      type: "GET",
      url: "https://dapi.kakao.com/v2/local/search/keyword.json",
      headers: { Authorization: "KakaoAK 29e82fbcca120b0de0f8be1f9ce91a29" },
      data: { query: query, page: page, size: 5 },
      success: function (data) {
        console.log(data);
        let temp = Handlebars.compile($("#temp_locals").html());
        $("#div_locals").html(temp(data));
        if (page == 1) {
          $("#prev").attr("disabled", true);
        } else {
          $("#prev").attr("disabled", false);
        }
        if (data.meta.is_end) {
          $("#next").attr("disabled", true);
        } else {
          $("#next").attr("disabled", false);
        }
        let last = Math.ceil(data.meta.pageable_count / 5);
        $("#span_page").html(page + "/" + last);

        if (page == 1) $("#prev").attr("disabled", true);
        else $("#prev").attr("disabled", false);
        if (data.meta.is_end) $("#next").attr("disabled", true);
        else $("#next").attr("disabled", false);
      },
    });
  }
</script>
